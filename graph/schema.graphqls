type User {
  _id: ID!
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  created_at: String!
  updated_at: String!
  token: String!
}

type Task {
  _id: ID!
  title: String!
  completed: Boolean!
  completed_date: String!
  created_at: String!
  updated_at: String!
  user_id: ID!
}

type Query {
  users: [User!]!
  user(_id: ID!): User!
  tasks: [Task!]!
  task(_id: ID!): Task!
}

input SignupInput {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input NewTask {
  title: String!
}

input UpdateUser {
  _id: ID!
  email: String!
  first_name: String!
  last_name: String!
}

input UpdateTask {
  _id: ID!
  title: String!
  completed: Boolean!
}

type Mutation {
  signup(input: SignupInput!): User!
  login(input: LoginInput!): User!
  updateUser(input: UpdateUser!): User!
  deleteUser(_id: ID!): ID!
  createTask(input: NewTask!): Task!
  updateTask(input: UpdateTask!): Task!
  deleteTask(_id: ID!): ID!
}
